//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSViewController.h"

#import "MQPhotoAccessoryViewDelegate.h"

@class MQMoveWindowView, MQPhotoAlbumListView, MQPhotoAlbumResizeMaskView, MQPhotoWindowController, NSArray, NSLayoutConstraint, NSScrollView, NSString, NSTextField, NSView;

@interface MQPhotoAlbumController : NSViewController <MQPhotoAccessoryViewDelegate>
{
    BOOL _isShow;
    BOOL _isAnimating;
    BOOL _isResizing;
    MQPhotoWindowController *_windowController;
    id <MQPhotoAlbumControllerDelegate> _delegate;
    NSString *_titleText;
    MQMoveWindowView *_titleView;
    NSTextField *_titleLabel;
    NSScrollView *_scrollView;
    NSLayoutConstraint *_scrollLeading;
    NSLayoutConstraint *_scrollTrailing;
    NSLayoutConstraint *_scrollTop;
    NSLayoutConstraint *_scrollBottom;
    MQPhotoAlbumListView *_photoListView;
    NSArray *_photoes;
    NSView *_animationView;
    long long _scrollLineNum;
    MQPhotoAlbumResizeMaskView *_windowResizeMask;
    struct CGSize _winMinSize;
    struct CGSize _winMaxSize;
    struct CGRect _animateRect;
}

@property(retain, nonatomic) MQPhotoAlbumResizeMaskView *windowResizeMask; // @synthesize windowResizeMask=_windowResizeMask;
@property(nonatomic) long long scrollLineNum; // @synthesize scrollLineNum=_scrollLineNum;
@property(nonatomic) BOOL isResizing; // @synthesize isResizing=_isResizing;
@property(retain, nonatomic) NSView *animationView; // @synthesize animationView=_animationView;
@property(nonatomic) struct CGRect animateRect; // @synthesize animateRect=_animateRect;
@property(nonatomic) struct CGSize winMaxSize; // @synthesize winMaxSize=_winMaxSize;
@property(nonatomic) struct CGSize winMinSize; // @synthesize winMinSize=_winMinSize;
@property(retain, nonatomic) NSArray *photoes; // @synthesize photoes=_photoes;
@property(retain, nonatomic) MQPhotoAlbumListView *photoListView; // @synthesize photoListView=_photoListView;
@property NSLayoutConstraint *scrollBottom; // @synthesize scrollBottom=_scrollBottom;
@property NSLayoutConstraint *scrollTop; // @synthesize scrollTop=_scrollTop;
@property NSLayoutConstraint *scrollTrailing; // @synthesize scrollTrailing=_scrollTrailing;
@property NSLayoutConstraint *scrollLeading; // @synthesize scrollLeading=_scrollLeading;
@property NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
@property MQMoveWindowView *titleView; // @synthesize titleView=_titleView;
@property(copy) NSString *titleText; // @synthesize titleText=_titleText;
@property(readonly, nonatomic) BOOL isAnimating; // @synthesize isAnimating=_isAnimating;
@property(nonatomic) BOOL isShow; // @synthesize isShow=_isShow;
@property __weak id <MQPhotoAlbumControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property __weak MQPhotoWindowController *windowController; // @synthesize windowController=_windowController;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (void)accessoryView:(id)arg1 click:(long long)arg2;
- (id)viewForAccessoryIndex:(long long)arg1;
- (BOOL)showAccessoryViewForIndex:(long long)arg1;
- (void)loadScrollLineNum;
- (void)boundsDidChangeNotification:(id)arg1;
- (struct CGSize)scaleSize:(struct CGSize)arg1 WithScaleNum:(double)arg2;
- (void)removeAnimateView;
- (void)runAnimationWithState:(long long)arg1;
- (struct CGPoint)imageElementOriginWithPhotoNum:(long long)arg1 photoSize:(struct CGSize)arg2;
- (struct CGSize)imageElementSizeWithEdge:(double)arg1;
- (void)resetAlbumLayoutWithAnimate:(BOOL)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)hide;
- (void)show;
- (void)setImageRectForAnimateInNewController:(struct CGRect)arg1;
- (void)setTitleTextFromSessionID:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 photoes:(id)arg3 windowController:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

