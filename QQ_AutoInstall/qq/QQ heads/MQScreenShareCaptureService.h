//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSData, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>;

@interface MQScreenShareCaptureService : NSObject
{
    BOOL _isStart;
    BOOL _hasToAddImage;
    unsigned int _displayID;
    unsigned int _windowID;
    int _toAddWidth;
    int _toAddHeight;
    id <MQScreenShareCaptureServiceDelegate> _delegate;
    double _captureTimeInterval;
    char *_toAddYuvImageData;
    NSData *_strongToAddYuvImageData;
    NSObject<OS_dispatch_source> *_gcdTimer;
    NSObject<OS_dispatch_queue> *_captureQueue;
    char *_yuvData;
    char *_scaledYuvData;
    char *_rgbaData;
    char *_bgraData;
    char *_scaledNV12YuvData;
    NSData *_outputData;
    long long _logNumber;
    double _lastCaptureTime;
    struct CGSize _frameSize;
    struct CGRect _lastCaptureFrame;
}

+ (id)sharedService;
@property(nonatomic) double lastCaptureTime; // @synthesize lastCaptureTime=_lastCaptureTime;
@property(nonatomic) long long logNumber; // @synthesize logNumber=_logNumber;
@property(retain, nonatomic) NSData *outputData; // @synthesize outputData=_outputData;
@property(nonatomic) char *scaledNV12YuvData; // @synthesize scaledNV12YuvData=_scaledNV12YuvData;
@property(nonatomic) char *bgraData; // @synthesize bgraData=_bgraData;
@property(nonatomic) char *rgbaData; // @synthesize rgbaData=_rgbaData;
@property(nonatomic) char *scaledYuvData; // @synthesize scaledYuvData=_scaledYuvData;
@property(nonatomic) char *yuvData; // @synthesize yuvData=_yuvData;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *captureQueue; // @synthesize captureQueue=_captureQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *gcdTimer; // @synthesize gcdTimer=_gcdTimer;
@property(nonatomic) struct CGRect lastCaptureFrame; // @synthesize lastCaptureFrame=_lastCaptureFrame;
@property(nonatomic) struct CGSize frameSize; // @synthesize frameSize=_frameSize;
@property(nonatomic) int toAddHeight; // @synthesize toAddHeight=_toAddHeight;
@property(nonatomic) int toAddWidth; // @synthesize toAddWidth=_toAddWidth;
@property(nonatomic) BOOL hasToAddImage; // @synthesize hasToAddImage=_hasToAddImage;
@property(retain, nonatomic) NSData *strongToAddYuvImageData; // @synthesize strongToAddYuvImageData=_strongToAddYuvImageData;
@property(nonatomic) char *toAddYuvImageData; // @synthesize toAddYuvImageData=_toAddYuvImageData;
@property(nonatomic) double captureTimeInterval; // @synthesize captureTimeInterval=_captureTimeInterval;
@property(nonatomic) unsigned int windowID; // @synthesize windowID=_windowID;
@property(nonatomic) unsigned int displayID; // @synthesize displayID=_displayID;
@property(nonatomic) BOOL isStart; // @synthesize isStart=_isStart;
@property(nonatomic) id <MQScreenShareCaptureServiceDelegate> delegate; // @synthesize delegate=_delegate;
- (struct CGRect)rectOfWindowID:(unsigned int)arg1;
- (double)scaleOfImageSize:(struct CGSize)arg1 inTargetRectSize:(struct CGSize)arg2;
- (void)clearData;
- (void)sponsorCaptureImageWithDisplayID:(unsigned int)arg1 windowID:(unsigned int)arg2 exceptWindowIDArray:(id)arg3 toAddWindowIDArray:(id)arg4 completion:(id)arg5;
- (void)sponsorCaptureCurrentImageWithCompletion:(id)arg1;
- (BOOL)isScreenOrWindowExist:(unsigned int)arg1 windowID:(unsigned int)arg2;
- (void)stopCapture;
- (void)cgImageRefToYuvData:(struct CGImage *)arg1;
- (void)captureImageWithDisplayID:(unsigned int)arg1 windowID:(unsigned int)arg2 exceptWindowIDArray:(id)arg3 toAddWindowIDArray:(id)arg4;
- (void)restart;
- (void)startCaptureImageWithTimeInterval:(double)arg1 windowID:(unsigned int)arg2 displayID:(unsigned int)arg3 exceptWindowIDArray:(id)arg4 toAddWindowIDArray:(id)arg5;
- (void)dealloc;
- (id)init;

@end

